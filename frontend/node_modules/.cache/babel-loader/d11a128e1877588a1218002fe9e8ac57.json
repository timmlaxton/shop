{"ast":null,"code":"import { CART_ADD_ITEM, CART_REMOVE_ITEM } from '../constants/cartConstants';\nexport const cartReducer = (state = {\n  cartItems: []\n}, action) => {\n  switch (action.type) {\n    case CART_ADD_ITEM:\n      const item = action.payload;\n      const existItem = state.cartItems.find(x => x.product === item.product);\n\n      if (existItem) {\n        return { ...state,\n          cartItems: state.cartItems.map(x => x.product === existItem.product ? item : x)\n        };\n      } else {\n        return { ...state,\n          cartItems: [...state.cartItems, item]\n        };\n      }\n\n    case CART_REMOVE_ITEM:\n      return { ...state,\n        cartItems: state.cartItems.filter(x => x.product !== action.payload)\n      };\n\n    default:\n      return state;\n  }\n};","map":{"version":3,"sources":["/Users/Tim/Desktop/clothes/frontend/src/reducers/cartReducers.js"],"names":["CART_ADD_ITEM","CART_REMOVE_ITEM","cartReducer","state","cartItems","action","type","item","payload","existItem","find","x","product","map","filter"],"mappings":"AAAA,SAAQA,aAAR,EAAuBC,gBAAvB,QAA8C,4BAA9C;AAEA,OAAO,MAAMC,WAAW,GAAG,CAACC,KAAK,GAAG;AAAEC,EAAAA,SAAS,EAAE;AAAb,CAAT,EAA4BC,MAA5B,KAAuC;AAChE,UAAOA,MAAM,CAACC,IAAd;AACE,SAAKN,aAAL;AACE,YAAMO,IAAI,GAAGF,MAAM,CAACG,OAApB;AAEA,YAAMC,SAAS,GAAGN,KAAK,CAACC,SAAN,CAAgBM,IAAhB,CAAqBC,CAAC,IAAIA,CAAC,CAACC,OAAF,KAAcL,IAAI,CAACK,OAA7C,CAAlB;;AAEA,UAAGH,SAAH,EAAc;AACV,eAAO,EACL,GAAGN,KADE;AAELC,UAAAA,SAAS,EAAED,KAAK,CAACC,SAAN,CAAgBS,GAAhB,CAAoBF,CAAC,IAAIA,CAAC,CAACC,OAAF,KAAcH,SAAS,CAACG,OAAxB,GAAkCL,IAAlC,GAAyCI,CAAlE;AAFN,SAAP;AAIH,OALD,MAKO;AACL,eAAO,EACL,GAAGR,KADE;AAELC,UAAAA,SAAS,EAAE,CAAC,GAAGD,KAAK,CAACC,SAAV,EAAqBG,IAArB;AAFN,SAAP;AAID;;AACD,SAAKN,gBAAL;AACE,aAAO,EACL,GAAGE,KADE;AAELC,QAAAA,SAAS,EAAED,KAAK,CAACC,SAAN,CAAgBU,MAAhB,CAAuBH,CAAC,IAAIA,CAAC,CAACC,OAAF,KAAcP,MAAM,CAACG,OAAjD;AAFN,OAAP;;AAIJ;AACE,aAAOL,KAAP;AAvBJ;AAyBD,CA1BM","sourcesContent":["import {CART_ADD_ITEM, CART_REMOVE_ITEM} from '../constants/cartConstants'\n\nexport const cartReducer = (state = { cartItems: [] }, action) => {\n  switch(action.type) {\n    case CART_ADD_ITEM:\n      const item = action.payload\n\n      const existItem = state.cartItems.find(x => x.product === item.product)\n\n      if(existItem) {\n          return {\n            ...state,\n            cartItems: state.cartItems.map(x => x.product === existItem.product ? item : x)\n          }\n      } else {\n        return {\n          ...state,\n          cartItems: [...state.cartItems, item]\n        }\n      }\n      case CART_REMOVE_ITEM:\n        return {\n          ...state,\n          cartItems: state.cartItems.filter(x => x.product !== action.payload)\n        }\n    default: \n      return state\n  }\n}"]},"metadata":{},"sourceType":"module"}