{"ast":null,"code":"import { CART_ADD_ITEM, CART_REMOVE_ITEM, CART_SAVE_SHIPPING_ADDRESS, CART_SAVE_PAYMENT_METHOD } from '../constants/cartConstants';\nexport const cartReducer = (state = {\n  cartItems: [],\n  shippingAddress: {}\n}, action) => {\n  switch (action.type) {\n    case CART_ADD_ITEM:\n      const item = action.payload;\n      const existItem = state.cartItems.find(x => x.product === item.product);\n\n      if (existItem) {\n        return { ...state,\n          cartItems: state.cartItems.map(x => x.product === existItem.product ? item : x)\n        };\n      } else {\n        return { ...state,\n          cartItems: [...state.cartItems, item]\n        };\n      }\n\n    case CART_REMOVE_ITEM:\n      return { ...state,\n        cartItems: state.cartItems.filter(x => x.product !== action.payload)\n      };\n\n    case CART_SAVE_SHIPPING_ADDRESS:\n      return { ...state,\n        shippingAddress: action.payload\n      };\n\n    case CART_SAVE_PAYMENT_METHOD:\n      return { ...state,\n        paymentMethod: action.payload\n      };\n\n    default:\n      return state;\n  }\n};","map":{"version":3,"sources":["/Users/Tim/Desktop/clothes/frontend/src/reducers/cartReducers.js"],"names":["CART_ADD_ITEM","CART_REMOVE_ITEM","CART_SAVE_SHIPPING_ADDRESS","CART_SAVE_PAYMENT_METHOD","cartReducer","state","cartItems","shippingAddress","action","type","item","payload","existItem","find","x","product","map","filter","paymentMethod"],"mappings":"AAAA,SAAQA,aAAR,EAAuBC,gBAAvB,EAAyCC,0BAAzC,EAAqEC,wBAArE,QAAoG,4BAApG;AAEA,OAAO,MAAMC,WAAW,GAAG,CAACC,KAAK,GAAG;AAAEC,EAAAA,SAAS,EAAE,EAAb;AAAiBC,EAAAA,eAAe,EAAE;AAAlC,CAAT,EAAiDC,MAAjD,KAA4D;AACrF,UAAOA,MAAM,CAACC,IAAd;AACE,SAAKT,aAAL;AACE,YAAMU,IAAI,GAAGF,MAAM,CAACG,OAApB;AAEA,YAAMC,SAAS,GAAGP,KAAK,CAACC,SAAN,CAAgBO,IAAhB,CAAqBC,CAAC,IAAIA,CAAC,CAACC,OAAF,KAAcL,IAAI,CAACK,OAA7C,CAAlB;;AAEA,UAAGH,SAAH,EAAc;AACV,eAAO,EACL,GAAGP,KADE;AAELC,UAAAA,SAAS,EAAED,KAAK,CAACC,SAAN,CAAgBU,GAAhB,CAAoBF,CAAC,IAAIA,CAAC,CAACC,OAAF,KAAcH,SAAS,CAACG,OAAxB,GAAkCL,IAAlC,GAAyCI,CAAlE;AAFN,SAAP;AAIH,OALD,MAKO;AACL,eAAO,EACL,GAAGT,KADE;AAELC,UAAAA,SAAS,EAAE,CAAC,GAAGD,KAAK,CAACC,SAAV,EAAqBI,IAArB;AAFN,SAAP;AAID;;AACD,SAAKT,gBAAL;AACE,aAAO,EACL,GAAGI,KADE;AAELC,QAAAA,SAAS,EAAED,KAAK,CAACC,SAAN,CAAgBW,MAAhB,CAAuBH,CAAC,IAAIA,CAAC,CAACC,OAAF,KAAcP,MAAM,CAACG,OAAjD;AAFN,OAAP;;AAIF,SAAKT,0BAAL;AACE,aAAO,EACL,GAAGG,KADE;AAELE,QAAAA,eAAe,EAAEC,MAAM,CAACG;AAFnB,OAAP;;AAIF,SAAKR,wBAAL;AACE,aAAO,EACL,GAAGE,KADE;AAELa,QAAAA,aAAa,EAAEV,MAAM,CAACG;AAFjB,OAAP;;AAIJ;AACE,aAAON,KAAP;AAjCJ;AAmCD,CApCM","sourcesContent":["import {CART_ADD_ITEM, CART_REMOVE_ITEM, CART_SAVE_SHIPPING_ADDRESS, CART_SAVE_PAYMENT_METHOD} from '../constants/cartConstants'\n\nexport const cartReducer = (state = { cartItems: [], shippingAddress: {} }, action) => {\n  switch(action.type) {\n    case CART_ADD_ITEM:\n      const item = action.payload\n\n      const existItem = state.cartItems.find(x => x.product === item.product)\n\n      if(existItem) {\n          return {\n            ...state,\n            cartItems: state.cartItems.map(x => x.product === existItem.product ? item : x)\n          }\n      } else {\n        return {\n          ...state,\n          cartItems: [...state.cartItems, item]\n        }\n      }\n      case CART_REMOVE_ITEM:\n        return {\n          ...state,\n          cartItems: state.cartItems.filter(x => x.product !== action.payload)\n        }\n      case CART_SAVE_SHIPPING_ADDRESS:\n        return {\n          ...state,\n          shippingAddress: action.payload,\n        }\n      case CART_SAVE_PAYMENT_METHOD:\n        return {\n          ...state,\n          paymentMethod: action.payload,\n        }\n    default: \n      return state\n  }\n}"]},"metadata":{},"sourceType":"module"}