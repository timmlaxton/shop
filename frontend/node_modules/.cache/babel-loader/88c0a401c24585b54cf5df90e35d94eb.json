{"ast":null,"code":"var _jsxFileName = \"/Users/Tim/Desktop/clothes/frontend/src/screens/UserEditScreen.js\";\nimport React, { useState, useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport { Form, Button } from 'react-bootstrap';\nimport { useDispatch, useSelector } from 'react-redux';\nimport Message from '../components/Message';\nimport Loader from '../components/Loader';\nimport FormContainer from '../components/FormContainer';\nimport { getUserDetails } from '../actions/userActions';\n\nconst UserEditScreen = ({\n  match,\n  history\n}) => {\n  const userId = match.params.id;\n  const [name, setName] = useState('');\n  const [email, setEmail] = useState('');\n  const [isAdmin, setIsAdmin] = useState(false);\n  const dispatch = useDispatch();\n  const userDetails = useSelector(state => state.userDetails);\n  const {\n    loading,\n    error,\n    user\n  } = userDetails;\n  useEffect(() => {\n    if (!user.name || user._id !== userId) {\n      dispatch(getUserDetails(userId));\n    } else {\n      setName(user.name);\n      setEmail(user.email);\n      setAdmin(user.isAdmin);\n    }\n  }, []);\n\n  const submitHandler = e => {\n    e.preventDefault();\n  };\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Link, {\n    to: \"/admin/userlist\",\n    className: \"btn btn-light my-3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }\n  }, \"Go Back\"), /*#__PURE__*/React.createElement(FormContainer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }\n  }, \"Edit User\"), loading ? /*#__PURE__*/React.createElement(Loader, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 18\n    }\n  }) : error ? /*#__PURE__*/React.createElement(Message, {\n    variant: \"danger\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 38\n    }\n  }, error) : /*#__PURE__*/React.createElement(Form, {\n    onSubmit: submitHandler,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Form.Group, {\n    controlId: \"name\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Form.Label, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 13\n    }\n  }, \"Name\"), /*#__PURE__*/React.createElement(Form.Control, {\n    type: \"name\",\n    placeholder: \"Enter name\",\n    value: name,\n    onChange: e => setName(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 13\n    }\n  })), /*#__PURE__*/React.createElement(Form.Group, {\n    controlId: \"email\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Form.Label, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 13\n    }\n  }, \"Email Address\"), /*#__PURE__*/React.createElement(Form.Control, {\n    type: \"email\",\n    placeholder: \"Enter email\",\n    value: email,\n    onChange: e => setEmail(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 13\n    }\n  })), /*#__PURE__*/React.createElement(Form.Group, {\n    controlId: \"isAdmin\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Form.Check, {\n    type: \"checkbox\",\n    label: \"Is Admin\",\n    checked: isAdmin,\n    onChange: e => setIsAdmin(e.target.checked),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 13\n    }\n  })), /*#__PURE__*/React.createElement(Button, {\n    type: \"submit\",\n    variant: \"primary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 11\n    }\n  }, \"Update\"))));\n};\n\nexport default UserEditScreen;","map":{"version":3,"sources":["/Users/Tim/Desktop/clothes/frontend/src/screens/UserEditScreen.js"],"names":["React","useState","useEffect","Link","Form","Button","useDispatch","useSelector","Message","Loader","FormContainer","getUserDetails","UserEditScreen","match","history","userId","params","id","name","setName","email","setEmail","isAdmin","setIsAdmin","dispatch","userDetails","state","loading","error","user","_id","setAdmin","submitHandler","e","preventDefault","target","value","checked"],"mappings":"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","sourcesContent":["import React, {useState, useEffect} from 'react'\nimport {Link} from 'react-router-dom'\nimport {Form, Button} from 'react-bootstrap';\nimport {useDispatch, useSelector} from 'react-redux'\nimport Message from '../components/Message'\nimport Loader from '../components/Loader'\nimport FormContainer from '../components/FormContainer'\nimport {getUserDetails} from '../actions/userActions'\n\nconst UserEditScreen = ({match, history}) => {\n  const userId = match.params.id\n\n\n  const [name, setName] = useState('')\n  const [email, setEmail] = useState('')\n  const [isAdmin, setIsAdmin] = useState(false)\n\n  const dispatch = useDispatch()\n  \n  const userDetails = useSelector((state) => state.userDetails)\n  const { loading, error, user} = userDetails\n\n  useEffect(() => {\n    if(!user.name || user._id !== userId) {\n      dispatch(getUserDetails(userId))\n    } else {\n      setName(user.name)\n      setEmail(user.email)\n      setAdmin(user.isAdmin)\n    }\n  },[])\n\n    const submitHandler = (e) => {\n      e.preventDefault()\n    }\n\n     \n    \n\n  return (\n    <> \n      <Link to='/admin/userlist' className='btn btn-light my-3'>\n        Go Back\n      </Link>\n\n    <FormContainer>\n      <h1>Edit User</h1>\n      {loading ? <Loader/> : error ? <Message variant='danger'>{error}</Message> : (\n          <Form onSubmit={submitHandler}>\n          <Form.Group controlId='name'>\n            <Form.Label>Name</Form.Label>\n            <Form.Control \n            type='name' \n            placeholder=\"Enter name\" \n            value={name} \n            onChange={(e) => setName(e.target.value)}\n            ></Form.Control>\n          </Form.Group>\n  \n          <Form.Group controlId='email'>\n            <Form.Label>Email Address</Form.Label>\n            <Form.Control \n            type='email' \n            placeholder=\"Enter email\" \n            value={email} \n            onChange={(e) => setEmail(e.target.value)}\n            ></Form.Control>\n          </Form.Group>\n  \n          <Form.Group controlId='isAdmin'>\n            <Form.Check\n            type='checkbox' \n            label=\"Is Admin\" \n            checked={isAdmin}\n            onChange={(e) => setIsAdmin(e.target.checked)}\n            ></Form.Check>\n          </Form.Group>\n  \n          \n          <Button type='submit' variant='primary'>\n           Update\n          </Button>\n        </Form>\n  \n      ) }\n      \n     \n    </FormContainer>\n    </>\n  )\n}\n\nexport default UserEditScreen\n"]},"metadata":{},"sourceType":"module"}