{"ast":null,"code":"import { createStore, combineReducers, applyMiddleware } from 'redux';\nimport thunk from 'redux-thunk';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport { productListReducer, productDetailsReducer, productDeleteReducer, productCreateReducer, productUpdateReducer, productReviewCreateReducer } from './reducers/productReducers';\nimport { cartReducer } from './reducers/cartReducers';\nimport { userLoginReducer, userRegisterReducer, userDetailsReducer, userUpdateProfileReducer, userLIstReducer, userDeleteReducer, userUpdateReducer } from './reducers/userReducers';\nimport { orderCreateReducer, orderDetailsReducer, orderPayReducer, orderDeliverReducer, orderListMyReducer, orderListReducer } from './reducers/orderReducers';\nconst reducer = combineReducers({\n  productList: productListReducer,\n  productDetails: productDetailsReducer,\n  productDelete: productDeleteReducer,\n  productCreate: productCreateReducer,\n  productUpdate: productUpdateReducer,\n  productReviewCreate: productReviewCreateReducer,\n  cart: cartReducer,\n  userLogin: userLoginReducer,\n  userRegister: userRegisterReducer,\n  userDetails: userDetailsReducer,\n  userDelete: userDeleteReducer,\n  userUpdate: userUpdateReducer,\n  userUpdateProfile: userUpdateProfileReducer,\n  userList: userLIstReducer,\n  orderCreate: orderCreateReducer,\n  orderDetails: orderDetailsReducer,\n  orderPay: orderPayReducer,\n  orderDeliver: orderDeliverReducer,\n  orderListMy: orderListMyReducer,\n  orderList: orderListReducer\n});\nconst cartItemsFromStorage = localStorage.getItem('cartItems') ? JSON.parse(localStorage.getItem('cartItems')) : [];\nconst userInfoFromStorage = localStorage.getItem('userInfo') ? JSON.parse(localStorage.getItem('userInfo')) : null;\nconst shippingAddressFromStorage = localStorage.getItem('shippingAddress') ? JSON.parse(localStorage.getItem('shippingAddress')) : {};\nconst initialState = {\n  cart: {\n    cartItems: cartItemsFromStorage,\n    shippingAddress: shippingAddressFromStorage\n  },\n  userLogin: {\n    userInfo: userInfoFromStorage\n  }\n};\nconst middleware = [thunk];\nconst store = createStore(reducer, initialState, composeWithDevTools(applyMiddleware(...middleware)));\nexport default store;","map":{"version":3,"sources":["/Users/Tim/Desktop/clothes/frontend/src/store.js"],"names":["createStore","combineReducers","applyMiddleware","thunk","composeWithDevTools","productListReducer","productDetailsReducer","productDeleteReducer","productCreateReducer","productUpdateReducer","productReviewCreateReducer","cartReducer","userLoginReducer","userRegisterReducer","userDetailsReducer","userUpdateProfileReducer","userLIstReducer","userDeleteReducer","userUpdateReducer","orderCreateReducer","orderDetailsReducer","orderPayReducer","orderDeliverReducer","orderListMyReducer","orderListReducer","reducer","productList","productDetails","productDelete","productCreate","productUpdate","productReviewCreate","cart","userLogin","userRegister","userDetails","userDelete","userUpdate","userUpdateProfile","userList","orderCreate","orderDetails","orderPay","orderDeliver","orderListMy","orderList","cartItemsFromStorage","localStorage","getItem","JSON","parse","userInfoFromStorage","shippingAddressFromStorage","initialState","cartItems","shippingAddress","userInfo","middleware","store"],"mappings":"AAAA,SAASA,WAAT,EAAsBC,eAAtB,EAAuCC,eAAvC,QAA8D,OAA9D;AACA,OAAOC,KAAP,MAAkB,aAAlB;AACA,SAAQC,mBAAR,QAAkC,0BAAlC;AACA,SAASC,kBAAT,EAA6BC,qBAA7B,EAAoDC,oBAApD,EAA0EC,oBAA1E,EAAgGC,oBAAhG,EAAsHC,0BAAtH,QAAuJ,4BAAvJ;AACA,SAAQC,WAAR,QAA0B,yBAA1B;AACA,SAAQC,gBAAR,EAA0BC,mBAA1B,EAA+CC,kBAA/C,EAAmEC,wBAAnE,EAA6FC,eAA7F,EAA8GC,iBAA9G,EAAiIC,iBAAjI,QAAyJ,yBAAzJ;AACA,SAAQC,kBAAR,EAA4BC,mBAA5B,EAAiDC,eAAjD,EAAkEC,mBAAlE,EAAuFC,kBAAvF,EAA2GC,gBAA3G,QAAkI,0BAAlI;AAGA,MAAMC,OAAO,GAAGxB,eAAe,CAAC;AAC9ByB,EAAAA,WAAW,EAAErB,kBADiB;AAE9BsB,EAAAA,cAAc,EAAErB,qBAFc;AAG9BsB,EAAAA,aAAa,EAAErB,oBAHe;AAI9BsB,EAAAA,aAAa,EAAErB,oBAJe;AAK9BsB,EAAAA,aAAa,EAAErB,oBALe;AAM9BsB,EAAAA,mBAAmB,EAAErB,0BANS;AAO9BsB,EAAAA,IAAI,EAAErB,WAPwB;AAQ9BsB,EAAAA,SAAS,EAAErB,gBARmB;AAS9BsB,EAAAA,YAAY,EAAErB,mBATgB;AAU9BsB,EAAAA,WAAW,EAAErB,kBAViB;AAW9BsB,EAAAA,UAAU,EAAEnB,iBAXkB;AAY9BoB,EAAAA,UAAU,EAAEnB,iBAZkB;AAa9BoB,EAAAA,iBAAiB,EAAEvB,wBAbW;AAc9BwB,EAAAA,QAAQ,EAAEvB,eAdoB;AAe9BwB,EAAAA,WAAW,EAAErB,kBAfiB;AAgB9BsB,EAAAA,YAAY,EAAErB,mBAhBgB;AAiB9BsB,EAAAA,QAAQ,EAAErB,eAjBoB;AAkB9BsB,EAAAA,YAAY,EAAErB,mBAlBgB;AAmB9BsB,EAAAA,WAAW,EAAErB,kBAnBiB;AAoB9BsB,EAAAA,SAAS,EAAErB;AApBmB,CAAD,CAA/B;AAuBA,MAAMsB,oBAAoB,GAAGC,YAAY,CAACC,OAAb,CAAqB,WAArB,IAAoCC,IAAI,CAACC,KAAL,CAAWH,YAAY,CAACC,OAAb,CAAqB,WAArB,CAAX,CAApC,GAAoF,EAAjH;AAEA,MAAMG,mBAAmB,GAAGJ,YAAY,CAACC,OAAb,CAAqB,UAArB,IAAmCC,IAAI,CAACC,KAAL,CAAWH,YAAY,CAACC,OAAb,CAAqB,UAArB,CAAX,CAAnC,GAAkF,IAA9G;AAEA,MAAMI,0BAA0B,GAAGL,YAAY,CAACC,OAAb,CAAqB,iBAArB,IAA0CC,IAAI,CAACC,KAAL,CAAWH,YAAY,CAACC,OAAb,CAAqB,iBAArB,CAAX,CAA1C,GAAgG,EAAnI;AAGA,MAAMK,YAAY,GAAG;AAEnBrB,EAAAA,IAAI,EAAE;AAACsB,IAAAA,SAAS,EAAER,oBAAZ;AACNS,IAAAA,eAAe,EAAEH;AADX,GAFa;AAKnBnB,EAAAA,SAAS,EAAE;AAACuB,IAAAA,QAAQ,EAAEL;AAAX;AALQ,CAArB;AAQA,MAAMM,UAAU,GAAG,CAACtD,KAAD,CAAnB;AAEA,MAAMuD,KAAK,GAAG1D,WAAW,CAACyB,OAAD,EAAU4B,YAAV,EAAwBjD,mBAAmB,CAACF,eAAe,CAAC,GAAGuD,UAAJ,CAAhB,CAA3C,CAAzB;AAEA,eAAeC,KAAf","sourcesContent":["import { createStore, combineReducers, applyMiddleware } from 'redux'\nimport thunk from 'redux-thunk'\nimport {composeWithDevTools} from 'redux-devtools-extension'\nimport { productListReducer, productDetailsReducer, productDeleteReducer, productCreateReducer, productUpdateReducer, productReviewCreateReducer} from './reducers/productReducers'\nimport {cartReducer} from './reducers/cartReducers'\nimport {userLoginReducer, userRegisterReducer, userDetailsReducer, userUpdateProfileReducer, userLIstReducer, userDeleteReducer, userUpdateReducer} from './reducers/userReducers'\nimport {orderCreateReducer, orderDetailsReducer, orderPayReducer, orderDeliverReducer, orderListMyReducer, orderListReducer} from './reducers/orderReducers'\n\n\nconst reducer = combineReducers({\n  productList: productListReducer,\n  productDetails: productDetailsReducer,\n  productDelete: productDeleteReducer,\n  productCreate: productCreateReducer,\n  productUpdate: productUpdateReducer,\n  productReviewCreate: productReviewCreateReducer,\n  cart: cartReducer,\n  userLogin: userLoginReducer,\n  userRegister: userRegisterReducer,\n  userDetails: userDetailsReducer,\n  userDelete: userDeleteReducer,\n  userUpdate: userUpdateReducer,\n  userUpdateProfile: userUpdateProfileReducer,\n  userList: userLIstReducer,\n  orderCreate: orderCreateReducer,\n  orderDetails: orderDetailsReducer,\n  orderPay: orderPayReducer,\n  orderDeliver: orderDeliverReducer,\n  orderListMy: orderListMyReducer,\n  orderList: orderListReducer\n})\n\nconst cartItemsFromStorage = localStorage.getItem('cartItems') ? JSON.parse(localStorage.getItem('cartItems')) : []\n\nconst userInfoFromStorage = localStorage.getItem('userInfo') ? JSON.parse(localStorage.getItem('userInfo')) : null\n\nconst shippingAddressFromStorage = localStorage.getItem('shippingAddress') ? JSON.parse(localStorage.getItem('shippingAddress')) : {}\n\n\nconst initialState = {\n  \n  cart: {cartItems: cartItemsFromStorage, \n  shippingAddress: shippingAddressFromStorage,\n},\n  userLogin: {userInfo: userInfoFromStorage}\n}\n\nconst middleware = [thunk]\n\nconst store = createStore(reducer, initialState, composeWithDevTools(applyMiddleware(...middleware)))\n\nexport default store\n"]},"metadata":{},"sourceType":"module"}