{"ast":null,"code":"import { createStore, combineReducers, applyMiddleware } from 'redux';\nimport thunk from 'redux-thunk';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport { productListReducer, productDetailsReducer } from './reducers/productReducers';\nimport { cartReducer } from './reducers/cartReducers';\nimport { userLoginReducer, userRegisterReducer, userDetailsReducer } from './reducers/userReducers';\nconst reducer = combineReducers({\n  productList: productListReducer,\n  productDetails: productDetailsReducer,\n  cart: cartReducer,\n  userLogin: userLoginReducer,\n  userRegister: userRegisterReducer,\n  userDetails: userDetailsReducer\n});\nconst cartItemsFromStorage = localStorage.getItem('cartItems') ? JSON.parse(localStorage.getItem('cartItems')) : [];\nconst userInfoFromStorage = localStorage.getItem('userInfo') ? JSON.parse(localStorage.getItem('userInfo')) : null;\nconst initialState = {\n  cart: {\n    cartItems: cartItemsFromStorage\n  },\n  userLogin: {\n    userInfo: userInfoFromStorage\n  }\n};\nconst middleware = [thunk];\nconst store = createStore(reducer, initialState, composeWithDevTools(applyMiddleware(...middleware)));\nexport default store;","map":{"version":3,"sources":["/Users/Tim/Desktop/clothes/frontend/src/store.js"],"names":["createStore","combineReducers","applyMiddleware","thunk","composeWithDevTools","productListReducer","productDetailsReducer","cartReducer","userLoginReducer","userRegisterReducer","userDetailsReducer","reducer","productList","productDetails","cart","userLogin","userRegister","userDetails","cartItemsFromStorage","localStorage","getItem","JSON","parse","userInfoFromStorage","initialState","cartItems","userInfo","middleware","store"],"mappings":"AAAA,SAASA,WAAT,EAAsBC,eAAtB,EAAuCC,eAAvC,QAA8D,OAA9D;AACA,OAAOC,KAAP,MAAkB,aAAlB;AACA,SAAQC,mBAAR,QAAkC,0BAAlC;AACA,SAASC,kBAAT,EAA6BC,qBAA7B,QAA0D,4BAA1D;AACA,SAAQC,WAAR,QAA0B,yBAA1B;AACA,SAAQC,gBAAR,EAA0BC,mBAA1B,EAA+CC,kBAA/C,QAA0E,yBAA1E;AAGA,MAAMC,OAAO,GAAGV,eAAe,CAAC;AAC9BW,EAAAA,WAAW,EAAEP,kBADiB;AAE9BQ,EAAAA,cAAc,EAAEP,qBAFc;AAG9BQ,EAAAA,IAAI,EAAEP,WAHwB;AAI9BQ,EAAAA,SAAS,EAAEP,gBAJmB;AAK9BQ,EAAAA,YAAY,EAAEP,mBALgB;AAM9BQ,EAAAA,WAAW,EAAEP;AANiB,CAAD,CAA/B;AASA,MAAMQ,oBAAoB,GAAGC,YAAY,CAACC,OAAb,CAAqB,WAArB,IAAoCC,IAAI,CAACC,KAAL,CAAWH,YAAY,CAACC,OAAb,CAAqB,WAArB,CAAX,CAApC,GAAoF,EAAjH;AAGA,MAAMG,mBAAmB,GAAGJ,YAAY,CAACC,OAAb,CAAqB,UAArB,IAAmCC,IAAI,CAACC,KAAL,CAAWH,YAAY,CAACC,OAAb,CAAqB,UAArB,CAAX,CAAnC,GAAkF,IAA9G;AAEA,MAAMI,YAAY,GAAG;AAEnBV,EAAAA,IAAI,EAAE;AAACW,IAAAA,SAAS,EAAEP;AAAZ,GAFa;AAGnBH,EAAAA,SAAS,EAAE;AAACW,IAAAA,QAAQ,EAAEH;AAAX;AAHQ,CAArB;AAMA,MAAMI,UAAU,GAAG,CAACxB,KAAD,CAAnB;AAEA,MAAMyB,KAAK,GAAG5B,WAAW,CAACW,OAAD,EAAUa,YAAV,EAAwBpB,mBAAmB,CAACF,eAAe,CAAC,GAAGyB,UAAJ,CAAhB,CAA3C,CAAzB;AAEA,eAAeC,KAAf","sourcesContent":["import { createStore, combineReducers, applyMiddleware } from 'redux'\nimport thunk from 'redux-thunk'\nimport {composeWithDevTools} from 'redux-devtools-extension'\nimport { productListReducer, productDetailsReducer } from './reducers/productReducers'\nimport {cartReducer} from './reducers/cartReducers'\nimport {userLoginReducer, userRegisterReducer, userDetailsReducer} from   './reducers/userReducers'\n\n\nconst reducer = combineReducers({\n  productList: productListReducer,\n  productDetails: productDetailsReducer,\n  cart: cartReducer,\n  userLogin: userLoginReducer,\n  userRegister: userRegisterReducer,\n  userDetails: userDetailsReducer\n})\n\nconst cartItemsFromStorage = localStorage.getItem('cartItems') ? JSON.parse(localStorage.getItem('cartItems')) : []\n\n\nconst userInfoFromStorage = localStorage.getItem('userInfo') ? JSON.parse(localStorage.getItem('userInfo')) : null\n\nconst initialState = {\n  \n  cart: {cartItems: cartItemsFromStorage},\n  userLogin: {userInfo: userInfoFromStorage}\n}\n\nconst middleware = [thunk]\n\nconst store = createStore(reducer, initialState, composeWithDevTools(applyMiddleware(...middleware)))\n\nexport default store\n"]},"metadata":{},"sourceType":"module"}