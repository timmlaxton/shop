{"ast":null,"code":"import { createStore, combineReducers, applyMiddleware } from 'redux';\nimport thunk from 'redux-thunk';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport { productListReducer, productDetailsReducer, productDeleteReducer, productCreateReducer, productUpdateReducer } from './reducers/productReducers';\nimport { cartReducer } from './reducers/cartReducers';\nimport { userLoginReducer, userRegisterReducer, userDetailsReducer, userUpdateProfileReducer, userLIstReducer, userDeleteReducer, userUpdateReducer } from './reducers/userReducers';\nimport { orderCreateReducer, orderDetailsReducer, orderPayReducer, orderListMyReducer } from './reducers/orderReducers';\nconst reducer = combineReducers({\n  productList: productListReducer,\n  productDetails: productDetailsReducer,\n  productDelete: productDeleteReducer,\n  productCreate: productCreateReducer,\n  productUpdate: productUpdateReducer,\n  cart: cartReducer,\n  userLogin: userLoginReducer,\n  userRegister: userRegisterReducer,\n  userDetails: userDetailsReducer,\n  userDelete: userDeleteReducer,\n  userUpdate: userUpdateReducer,\n  userUpdateProfile: userUpdateProfileReducer,\n  userList: userLIstReducer,\n  orderCreate: orderCreateReducer,\n  orderDetails: orderDetailsReducer,\n  orderPay: orderPayReducer,\n  orderListMy: orderListMyReducer\n});\nconst cartItemsFromStorage = localStorage.getItem('cartItems') ? JSON.parse(localStorage.getItem('cartItems')) : [];\nconst userInfoFromStorage = localStorage.getItem('userInfo') ? JSON.parse(localStorage.getItem('userInfo')) : null;\nconst shippingAddressFromStorage = localStorage.getItem('shippingAddress') ? JSON.parse(localStorage.getItem('shippingAddress')) : {};\nconst initialState = {\n  cart: {\n    cartItems: cartItemsFromStorage,\n    shippingAddress: shippingAddressFromStorage\n  },\n  userLogin: {\n    userInfo: userInfoFromStorage\n  }\n};\nconst middleware = [thunk];\nconst store = createStore(reducer, initialState, composeWithDevTools(applyMiddleware(...middleware)));\nexport default store;","map":{"version":3,"sources":["/Users/Tim/Desktop/clothes/frontend/src/store.js"],"names":["createStore","combineReducers","applyMiddleware","thunk","composeWithDevTools","productListReducer","productDetailsReducer","productDeleteReducer","productCreateReducer","productUpdateReducer","cartReducer","userLoginReducer","userRegisterReducer","userDetailsReducer","userUpdateProfileReducer","userLIstReducer","userDeleteReducer","userUpdateReducer","orderCreateReducer","orderDetailsReducer","orderPayReducer","orderListMyReducer","reducer","productList","productDetails","productDelete","productCreate","productUpdate","cart","userLogin","userRegister","userDetails","userDelete","userUpdate","userUpdateProfile","userList","orderCreate","orderDetails","orderPay","orderListMy","cartItemsFromStorage","localStorage","getItem","JSON","parse","userInfoFromStorage","shippingAddressFromStorage","initialState","cartItems","shippingAddress","userInfo","middleware","store"],"mappings":"AAAA,SAASA,WAAT,EAAsBC,eAAtB,EAAuCC,eAAvC,QAA8D,OAA9D;AACA,OAAOC,KAAP,MAAkB,aAAlB;AACA,SAAQC,mBAAR,QAAkC,0BAAlC;AACA,SAASC,kBAAT,EAA6BC,qBAA7B,EAAoDC,oBAApD,EAA0EC,oBAA1E,EAAgGC,oBAAhG,QAA4H,4BAA5H;AACA,SAAQC,WAAR,QAA0B,yBAA1B;AACA,SAAQC,gBAAR,EAA0BC,mBAA1B,EAA+CC,kBAA/C,EAAmEC,wBAAnE,EAA6FC,eAA7F,EAA8GC,iBAA9G,EAAiIC,iBAAjI,QAAyJ,yBAAzJ;AACA,SAAQC,kBAAR,EAA4BC,mBAA5B,EAAiDC,eAAjD,EAAkEC,kBAAlE,QAA2F,0BAA3F;AAGA,MAAMC,OAAO,GAAGrB,eAAe,CAAC;AAC9BsB,EAAAA,WAAW,EAAElB,kBADiB;AAE9BmB,EAAAA,cAAc,EAAElB,qBAFc;AAG9BmB,EAAAA,aAAa,EAAElB,oBAHe;AAI9BmB,EAAAA,aAAa,EAAElB,oBAJe;AAK9BmB,EAAAA,aAAa,EAAElB,oBALe;AAM9BmB,EAAAA,IAAI,EAAElB,WANwB;AAO9BmB,EAAAA,SAAS,EAAElB,gBAPmB;AAQ9BmB,EAAAA,YAAY,EAAElB,mBARgB;AAS9BmB,EAAAA,WAAW,EAAElB,kBATiB;AAU9BmB,EAAAA,UAAU,EAAEhB,iBAVkB;AAW9BiB,EAAAA,UAAU,EAAEhB,iBAXkB;AAY9BiB,EAAAA,iBAAiB,EAAEpB,wBAZW;AAa9BqB,EAAAA,QAAQ,EAAEpB,eAboB;AAc9BqB,EAAAA,WAAW,EAAElB,kBAdiB;AAe9BmB,EAAAA,YAAY,EAAElB,mBAfgB;AAgB9BmB,EAAAA,QAAQ,EAAElB,eAhBoB;AAiB9BmB,EAAAA,WAAW,EAAElB;AAjBiB,CAAD,CAA/B;AAoBA,MAAMmB,oBAAoB,GAAGC,YAAY,CAACC,OAAb,CAAqB,WAArB,IAAoCC,IAAI,CAACC,KAAL,CAAWH,YAAY,CAACC,OAAb,CAAqB,WAArB,CAAX,CAApC,GAAoF,EAAjH;AAEA,MAAMG,mBAAmB,GAAGJ,YAAY,CAACC,OAAb,CAAqB,UAArB,IAAmCC,IAAI,CAACC,KAAL,CAAWH,YAAY,CAACC,OAAb,CAAqB,UAArB,CAAX,CAAnC,GAAkF,IAA9G;AAEA,MAAMI,0BAA0B,GAAGL,YAAY,CAACC,OAAb,CAAqB,iBAArB,IAA0CC,IAAI,CAACC,KAAL,CAAWH,YAAY,CAACC,OAAb,CAAqB,iBAArB,CAAX,CAA1C,GAAgG,EAAnI;AAGA,MAAMK,YAAY,GAAG;AAEnBnB,EAAAA,IAAI,EAAE;AAACoB,IAAAA,SAAS,EAAER,oBAAZ;AACNS,IAAAA,eAAe,EAAEH;AADX,GAFa;AAKnBjB,EAAAA,SAAS,EAAE;AAACqB,IAAAA,QAAQ,EAAEL;AAAX;AALQ,CAArB;AAQA,MAAMM,UAAU,GAAG,CAAChD,KAAD,CAAnB;AAEA,MAAMiD,KAAK,GAAGpD,WAAW,CAACsB,OAAD,EAAUyB,YAAV,EAAwB3C,mBAAmB,CAACF,eAAe,CAAC,GAAGiD,UAAJ,CAAhB,CAA3C,CAAzB;AAEA,eAAeC,KAAf","sourcesContent":["import { createStore, combineReducers, applyMiddleware } from 'redux'\nimport thunk from 'redux-thunk'\nimport {composeWithDevTools} from 'redux-devtools-extension'\nimport { productListReducer, productDetailsReducer, productDeleteReducer, productCreateReducer, productUpdateReducer } from './reducers/productReducers'\nimport {cartReducer} from './reducers/cartReducers'\nimport {userLoginReducer, userRegisterReducer, userDetailsReducer, userUpdateProfileReducer, userLIstReducer, userDeleteReducer, userUpdateReducer} from './reducers/userReducers'\nimport {orderCreateReducer, orderDetailsReducer, orderPayReducer, orderListMyReducer} from './reducers/orderReducers'\n\n\nconst reducer = combineReducers({\n  productList: productListReducer,\n  productDetails: productDetailsReducer,\n  productDelete: productDeleteReducer,\n  productCreate: productCreateReducer,\n  productUpdate: productUpdateReducer,\n  cart: cartReducer,\n  userLogin: userLoginReducer,\n  userRegister: userRegisterReducer,\n  userDetails: userDetailsReducer,\n  userDelete: userDeleteReducer,\n  userUpdate: userUpdateReducer,\n  userUpdateProfile: userUpdateProfileReducer,\n  userList: userLIstReducer,\n  orderCreate: orderCreateReducer,\n  orderDetails: orderDetailsReducer,\n  orderPay: orderPayReducer,\n  orderListMy: orderListMyReducer\n})\n\nconst cartItemsFromStorage = localStorage.getItem('cartItems') ? JSON.parse(localStorage.getItem('cartItems')) : []\n\nconst userInfoFromStorage = localStorage.getItem('userInfo') ? JSON.parse(localStorage.getItem('userInfo')) : null\n\nconst shippingAddressFromStorage = localStorage.getItem('shippingAddress') ? JSON.parse(localStorage.getItem('shippingAddress')) : {}\n\n\nconst initialState = {\n  \n  cart: {cartItems: cartItemsFromStorage, \n  shippingAddress: shippingAddressFromStorage,\n},\n  userLogin: {userInfo: userInfoFromStorage}\n}\n\nconst middleware = [thunk]\n\nconst store = createStore(reducer, initialState, composeWithDevTools(applyMiddleware(...middleware)))\n\nexport default store\n"]},"metadata":{},"sourceType":"module"}